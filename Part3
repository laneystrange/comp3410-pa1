.data

originalValue: .word 1 # keeps track of what number your on
currentValue: .word 1 # sum of previously added numbers
line: .asciiz " "


prompt: .asciiz "Calculating the sum of odd integers between 1 and 15...\n"


.text 

li $v0, 4
la $a0, prompt	#Prints prompt to the screen"
syscall


addi $s0, $s0, 1	#starts the loop at one


start: 		bge $s1, 8, exit	# this sets the loop to go up to 8

		la $t0, currentValue	# loads currentValue to $t0 and then puts content into $t1
		lw $t0, 0($t0)
		
		la $t1, originalValue	# loads originalValue to $t1 and thn puts content into $t1
		lw $t1, 0($t1)
		
		addi $t2, $t1, 2	# adds 2 to the original odd integer so it keeps track of where it is
		
		add $s0, $t0, $t2	# adding the two odd integers together
		
		sw  $s0, currentValue	# stores content of $s0 into the variable currentValue
		sw $t2, originalValue   #stores content of $t2 into the variable originalValue
		
		
		addi $s1, $s1, 1	# counts to keep of where you are in the loop
		
		la $a0, currentValue	
		lw $a0, 0($a0)		# loads content of currentValue into $a0
		li $v0, 1		# print a integer
		syscall
		
		la $a0, line		# puts a space betwen each number printed out
		li $v0, 4
		syscall
		
		j start			# jumps back to the beginning of the loop
		
exit:					# exits the program when the loop ends
